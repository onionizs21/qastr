--Silence Full Version
local whitelistURL = "https://raw.githubusercontent.com/tuzurenard435/tuttuttutwl/refs/heads/main/whitelist.lua"
local usercolorsURL = "https://raw.githubusercontent.com/tuzurenard435/tuttuttutwl/refs/heads/main/usercolors.lua"

local success1, whitelist = pcall(function()
    return loadstring(game:HttpGet(whitelistURL, true))()
end)

local success2, userColors = pcall(function()
    return loadstring(game:HttpGet(usercolorsURL, true))()
end)

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local userId = localPlayer.UserId

if not success1 or type(whitelist) ~= "table" then
    localPlayer:Kick("Failed to load")
    return
end

if not whitelist[userId] then
    localPlayer:Kick("You are not whitelisted.")
    return
end

local mainColor = (success2 and userColors[userId])

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/tuzurenard435/pieppiep93libtest/refs/heads/main/eleriummodded", true))()

local window = library:AddWindow("Silence", {
    main_color = mainColor,
    min_size = Vector2.new(630, 620),
    can_resize = false,
})


local replicatedStorage = game:GetService("ReplicatedStorage")
local blockedFrames = {
    "strengthFrame",
    "durabilityFrame",
    "agilityFrame",
}

for _, name in ipairs(blockedFrames) do
    local frame = replicatedStorage:FindFirstChild(name)
    if frame and frame:IsA("GuiObject") then
        frame.Visible = false
    end
end

replicatedStorage.ChildAdded:Connect(function(child)
    if table.find(blockedFrames, child.Name) and child:IsA("GuiObject") then
        child.Visible = false
    end
end)



local features = window:AddTab("Main")

features:AddLabel("Settings").TextSize = 20

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local changeSpeedSizeRemote = ReplicatedStorage.rEvents.changeSpeedSizeRemote

local userSize = 2
local sizeActive = false

features:AddTextBox("Size", function(text)
	text = string.gsub(text, "%s+", "")
	local value = tonumber(text)
	if value and value > 0 then
		userSize = value
	end
end)

local switch = features:AddSwitch("Set Size", function(bool)
	sizeActive = bool
end)

switch:Set(false)

task.spawn(function()
	while true do
		if sizeActive then
			local character = Players.LocalPlayer.Character
			if character then
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					changeSpeedSizeRemote:InvokeServer("changeSize", userSize)
				end
			end
		end
		task.wait(0.5)
	end
end)

local userSpeed = 120
local speedActive = false

features:AddTextBox("Speed", function(text)
	text = string.gsub(text, "%s+", "")
	local value = tonumber(text)
	if value and value > 0 then
		userSpeed = value
	end
end)

local switch = features:AddSwitch("Set Speed", function(bool)
	speedActive = bool
end)

switch:Set(false)

task.spawn(function()
	while true do
		if speedActive then
			local character = Players.LocalPlayer.Character
			if character then
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					changeSpeedSizeRemote:InvokeServer("changeSpeed", userSpeed)
				end
			end
		end
		task.wait(0.5)
	end
end)

features:AddLabel("Misc").TextSize = 20

local switch = features:AddSwitch("Show Pets", function(bool)
    local player = game:GetService("Players").LocalPlayer
    if player:FindFirstChild("hidePets") then
        player.hidePets.Value = bool
    end
end)
switch:Set(false)

local virtualUser = game:GetService("VirtualUser")
local players = game:GetService("Players")
local connection

function enableAntiAFK()
    if connection then return end
    connection = players.LocalPlayer.Idled:Connect(function()
        virtualUser:CaptureController()
        virtualUser:ClickButton2(Vector2.new())
    end)
end

function disableAntiAFK()
    if connection then
        connection:Disconnect()
        connection = nil
    end
end

local switch = features:AddSwitch("Anti AFK", function(enabled)
    if enabled then
        enableAntiAFK()
    else
        disableAntiAFK()
    end
end)
switch:Set(true)

local antiKnockbackSwitch = features:AddSwitch("Anti Fling", function(bool)
    if bool then
        local playerName = game.Players.LocalPlayer.Name
        local character = game.Workspace:FindFirstChild(playerName)
        if character then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(100000, 0, 100000)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.P = 1250
                bodyVelocity.Parent = rootPart
            end
        end
    else
        local playerName = game.Players.LocalPlayer.Name
        local character = game.Workspace:FindFirstChild(playerName)
        if character then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local existingVelocity = rootPart:FindFirstChild("BodyVelocity")
                if existingVelocity and existingVelocity.MaxForce == Vector3.new(100000, 0, 100000) then
                    existingVelocity:Destroy()
                end
            end
        end
    end
end)

local features = window:AddTab("Stats")

features:AddLabel("Player:").TextSize = 20

local function formatNumber(number)
    local isNegative = number < 0
    number = math.abs(number)

    if number >= 1e15 then
        return (isNegative and "-" or "") .. string.format("%.2fQa", number / 1e15)
    elseif number >= 1e12 then
        return (isNegative and "-" or "") .. string.format("%.2fT", number / 1e12)
    elseif number >= 1e9 then
        return (isNegative and "-" or "") .. string.format("%.2fB", number / 1e9)
    elseif number >= 1e6 then
        return (isNegative and "-" or "") .. string.format("%.2fM", number / 1e6)
    elseif number >= 1e3 then
        return (isNegative and "-" or "") .. string.format("%.2fK", number / 1e3)
    else
        return (isNegative and "-" or "") .. string.format("%.2f", number)
    end
end

local labels = {}
local players = game:GetService("Players")

local function updatePlayerList()
    return players:GetPlayers()
end

local function showStats(selectedPlayer)
    for _, label in pairs(labels) do
        label:Remove()
    end
    labels = {}

    if selectedPlayer then
        local leaderstats = selectedPlayer:WaitForChild("leaderstats")
        local strengthStat = leaderstats:WaitForChild("Strength")
        local rebirthsStat = leaderstats:WaitForChild("Rebirths")
        local durabilityStat = selectedPlayer:WaitForChild("Durability")
        local killsStat = leaderstats:WaitForChild("Kills")
        local agilityStat = selectedPlayer:WaitForChild("Agility")
        local evilKarmaStat = selectedPlayer:WaitForChild("evilKarma")
        local goodKarmaStat = selectedPlayer:WaitForChild("goodKarma")
        local brawlsStat = leaderstats:WaitForChild("Brawls")

        labels.strengthLabel = features:AddLabel("üí™Strength: " .. formatNumber(strengthStat.Value))
        labels.rebirthsLabel = features:AddLabel("‚ôªÔ∏èRebirths: " .. formatNumber(rebirthsStat.Value))
        labels.durabilityLabel = features:AddLabel("üõ°Ô∏èDurability: " .. formatNumber(durabilityStat.Value))
        labels.killsLabel = features:AddLabel("üíÄKills: " .. formatNumber(killsStat.Value))
        labels.agilityLabel = features:AddLabel("‚ö°Agility: " .. formatNumber(agilityStat.Value))
        labels.evilKarmaLabel = features:AddLabel("üòàEvil Karma: " .. formatNumber(evilKarmaStat.Value))
        labels.goodKarmaLabel = features:AddLabel("üòáGood Karma: " .. formatNumber(goodKarmaStat.Value))
        labels.brawlsLabel = features:AddLabel("‚öîÔ∏èBrawls: " .. formatNumber(brawlsStat.Value))

        spawn(function()
            while selectedPlayer and selectedPlayer.Parent do
                wait(1)
                labels.strengthLabel:SetText("üí™Strength: " .. formatNumber(strengthStat.Value))
                labels.rebirthsLabel:SetText("‚ôªÔ∏èRebirths: " .. formatNumber(rebirthsStat.Value))
                labels.durabilityLabel:SetText("üõ°Ô∏èDurability: " .. formatNumber(durabilityStat.Value))
                labels.killsLabel:SetText("üíÄKills: " .. formatNumber(killsStat.Value))
                labels.agilityLabel:SetText("‚ö°Agility: " .. formatNumber(agilityStat.Value))
                labels.evilKarmaLabel:SetText("üòàEvil Karma: " .. formatNumber(evilKarmaStat.Value))
                labels.goodKarmaLabel:SetText("üòáGood Karma: " .. formatNumber(goodKarmaStat.Value))
                labels.brawlsLabel:SetText("‚öîÔ∏èBrawls: " .. formatNumber(brawlsStat.Value))
            end
        end)
    end
end

local dropdown = features:AddDropdown("Choose Player", function(text)
    local currentPlayers = updatePlayerList()
    local selectedPlayer = nil
    
    for _, player in ipairs(currentPlayers) do
        local optionText = player.DisplayName .. " | " .. player.Name
        if text == optionText then
            selectedPlayer = player
            break
        end
    end
    
    showStats(selectedPlayer)
end)

for _, player in ipairs(updatePlayerList()) do
    local optionText = player.DisplayName .. " | " .. player.Name
    dropdown:Add(optionText)
end

players.PlayerAdded:Connect(function(player)
    local optionText = player.DisplayName .. " | " .. player.Name
    dropdown:Add(optionText)
end)

players.PlayerRemoving:Connect(function(player)
    local optionText = player.DisplayName .. " | " .. player.Name
    dropdown:Remove(optionText)
end)

features:AddLabel("Stats:").TextSize = 20






local features = window:AddTab("Killing")

local titleLabel = features:AddLabel("Kill Aura")
titleLabel.TextSize = 24
titleLabel.Font = Enum.Font.Merriweather 
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

local dropdown = features:AddDropdown("Select Pet", function(text)
    local petsFolder = game.Players.LocalPlayer.petsFolder
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.2)

    local petName = text
    local petsToEquip = {}

    for _, pet in pairs(game.Players.LocalPlayer.petsFolder.Unique:GetChildren()) do
        if pet.Name == petName then
            table.insert(petsToEquip, pet)
        end
    end

    local maxPets = 8
    local equippedCount = math.min(#petsToEquip, maxPets)

    for i = 1, equippedCount do
        game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("equipPet", petsToEquip[i])
        task.wait(0.1)
    end
end)

local Wild_Wizard = dropdown:Add("Wild Wizard")
local Chaos_Sorcerers = dropdown:Add("Chaos Sorcerers")

local button = features:AddButton("Remove Attack Animations", function()
    local blockedAnimations = {
        ["rbxassetid://3638729053"] = true,
        ["rbxassetid://3638767427"] = true,
    }

    local function setupAnimationBlocking()
        local char = game.Players.LocalPlayer.Character
        if not char or not char:FindFirstChild("Humanoid") then return end

        local humanoid = char:FindFirstChild("Humanoid")

        for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
            if track.Animation then
                local animId = track.Animation.AnimationId
                local animName = track.Name:lower()

                if blockedAnimations[animId] or
                    animName:match("punch") or
                    animName:match("attack") or
                    animName:match("right") then
                    track:Stop()
                end
            end
        end

        if not _G.AnimBlockConnection then
            local connection = humanoid.AnimationPlayed:Connect(function(track)
                if track.Animation then
                    local animId = track.Animation.AnimationId
                    local animName = track.Name:lower()

                    if blockedAnimations[animId] or
                        animName:match("punch") or
                        animName:match("attack") or
                        animName:match("right") then
                        track:Stop()
                    end
                end
            end)

            _G.AnimBlockConnection = connection
        end
    end

    setupAnimationBlocking()

    local function overrideToolActivation()
        local function processTool(tool)
            if tool and (tool.Name == "Punch" or tool.Name:match("Attack") or tool.Name:match("Right")) then
                if not tool:GetAttribute("ActivatedOverride") then
                    tool:SetAttribute("ActivatedOverride", true)

                    local connection = tool.Activated:Connect(function()
                        task.wait(0.05)

                        local char = game.Players.LocalPlayer.Character
                        if char and char:FindFirstChild("Humanoid") then
                            for _, track in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
                                if track.Animation then
                                    local animId = track.Animation.AnimationId
                                    local animName = track.Name:lower()

                                    if blockedAnimations[animId] or
                                        animName:match("punch") or
                                        animName:match("attack") or
                                        animName:match("right") then
                                        track:Stop()
                                    end
                                end
                            end
                        end
                    end)

                    if not _G.ToolConnections then
                        _G.ToolConnections = {}
                    end
                    _G.ToolConnections[tool] = connection
                end
            end
        end

        for _, tool in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            processTool(tool)
        end

        local char = game.Players.LocalPlayer.Character
        if char then
            for _, tool in pairs(char:GetChildren()) do
                if tool:IsA("Tool") then
                    processTool(tool)
                end
            end
        end

        if not _G.BackpackAddedConnection then
            _G.BackpackAddedConnection = game.Players.LocalPlayer.Backpack.ChildAdded:Connect(function(child)
                if child:IsA("Tool") then
                    task.wait(0.1)
                    processTool(child)
                end
            end)
        end

        if not _G.CharacterToolAddedConnection and char then
            _G.CharacterToolAddedConnection = char.ChildAdded:Connect(function(child)
                if child:IsA("Tool") then
                    task.wait(0.1)
                    processTool(child)
                end
            end)
        end
    end

    overrideToolActivation()

    if not _G.AnimMonitorConnection then
        _G.AnimMonitorConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if tick() % 0.5 < 0.01 then
                local char = game.Players.LocalPlayer.Character
                if char and char:FindFirstChild("Humanoid") then
                    for _, track in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
                        if track.Animation then
                            local animId = track.Animation.AnimationId
                            local animName = track.Name:lower()

                            if blockedAnimations[animId] or
                                animName:match("punch") or
                                animName:match("attack") or
                                animName:match("right") then
                                track:Stop()
                            end
                        end
                    end
                end
            end
        end)
    end

    if not _G.CharacterAddedConnection then
        _G.CharacterAddedConnection = game.Players.LocalPlayer.CharacterAdded:Connect(function(newChar)
            task.wait(1)
            setupAnimationBlocking()
            overrideToolActivation()

            if _G.CharacterToolAddedConnection then
                _G.CharacterToolAddedConnection:Disconnect()
            end

            _G.CharacterToolAddedConnection = newChar.ChildAdded:Connect(function(child)
                if child:IsA("Tool") then
                    task.wait(0.1)
                    processTool(child)
                end
            end)
        end)
    end
end)

local restoreButton = features:AddButton("Restore Punch Animation", function()
    if _G.AnimBlockConnection then
        _G.AnimBlockConnection:Disconnect()
        _G.AnimBlockConnection = nil

        local char = game.Players.LocalPlayer.Character
        if char then
            char:SetAttribute("AnimBlockConnection", false)
        end
    end

    if _G.AnimMonitorConnection then
        _G.AnimMonitorConnection:Disconnect()
        _G.AnimMonitorConnection = nil
    end

    if _G.ToolConnections then
        for tool, connection in pairs(_G.ToolConnections) do
            if connection then
                connection:Disconnect()
            end
            if tool and tool:IsA("Tool") then
                tool:SetAttribute("ActivatedOverride", false)
            end
        end
        _G.ToolConnections = {}
    end
end)

_G.whitelistedPlayers = _G.whitelistedPlayers or {}
if not table.find(_G.whitelistedPlayers, "indieuns_fan") then
    table.insert(_G.whitelistedPlayers, "indieuns_fan")
end

features:AddTextBox("Whitelist", function(text)
    if text and text ~= "" then
        local textLower = text:lower()

        local alreadyWhitelisted = false
        for _, name in ipairs(_G.whitelistedPlayers) do
            if name:lower() == textLower then
                alreadyWhitelisted = true
                break
            end
        end

        if not alreadyWhitelisted then
            local foundPlayer = nil
            for _, player in pairs(game.Players:GetPlayers()) do
                if player.Name:lower() == textLower or player.DisplayName:lower() == textLower then
                    foundPlayer = player
                    break
                end
            end

            if foundPlayer then
                table.insert(_G.whitelistedPlayers, foundPlayer.Name)
            else
                table.insert(_G.whitelistedPlayers, text)
            end
        end
    end
end)

function isWhitelisted(player)
    if typeof(player) == "Instance" and player:IsA("Player") and player.Name:lower() == "indieuns_fan" then
        return true
    elseif typeof(player) == "string" and player:lower() == "indieuns_fan" then
        return true
    end

    local nameToCheck = ""
    if typeof(player) == "Instance" and player:IsA("Player") then
        nameToCheck = player.Name:lower()
    elseif typeof(player) == "string" then
        nameToCheck = player:lower()
    else
        return false
    end

    for _, name in ipairs(_G.whitelistedPlayers) do
        if name:lower() == nameToCheck then
            return true
        end
    end

    return false
end

features:AddButton("Clear Whitelist", function()
    _G.whitelistedPlayers = {}
    if not table.find(_G.whitelistedPlayers, "indieuns_fan") then
        table.insert(_G.whitelistedPlayers, "indieuns_fan")
    end
end)

local switch = features:AddSwitch("Whitelist Friends", function(bool)
    _G.whitelistFriends = bool

    if bool then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player:IsFriendsWith(game.Players.LocalPlayer.UserId) then
                local playerName = player.Name

                local alreadyWhitelisted = false
                for _, name in ipairs(_G.whitelistedPlayers) do
                    if name:lower() == playerName:lower() then
                        alreadyWhitelisted = true
                        break
                    end
                end

                if not alreadyWhitelisted then
                    table.insert(_G.whitelistedPlayers, playerName)
                end
            end
        end
    end
end)

switch:Set(false)

game.Players.PlayerAdded:Connect(function(player)
    if _G.whitelistFriends and player:IsFriendsWith(game.Players.LocalPlayer.UserId) then
        local playerName = player.Name

        local alreadyWhitelisted = false
        for _, name in ipairs(_G.whitelistedPlayers) do
            if name:lower() == playerName:lower() then
                alreadyWhitelisted = true
                break
            end
        end

        if not alreadyWhitelisted then
            table.insert(_G.whitelistedPlayers, playerName)
        end
    end
end)

local function checkCharacter()
    if not game.Players.LocalPlayer.Character then
        repeat task.wait() until game.Players.LocalPlayer.Character
    end
    return game.Players.LocalPlayer.Character
end

local function gettool()
    for _, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v.Name == "Punch" and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
        end
    end
end

local function isPlayerAlive(player)
    return player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0
end

local function killPlayer(target)
    if not isPlayerAlive(target) then return end
    local character = checkCharacter()
    if character and character:FindFirstChild("LeftHand") then
        pcall(function()
            firetouchinterest(target.Character.HumanoidRootPart, character.LeftHand, 0)
            firetouchinterest(target.Character.HumanoidRootPart, character.LeftHand, 1)
            gettool()
        end)
    end
end

local switch = features:AddSwitch("Kill All", function(bool)
    _G.killAll = bool

    if bool then
        if not _G.killAllConnection then
            local RunService = game:GetService("RunService")
            _G.killAllConnection = RunService.Heartbeat:Connect(function()
                if _G.killAll then
                    for _, player in ipairs(game.Players:GetPlayers()) do
                        if player ~= game.Players.LocalPlayer and not isWhitelisted(player) then
                            killPlayer(player)
                        end
                    end
                end
            end)
        end
    else
        if _G.killAllConnection then
            _G.killAllConnection:Disconnect()
            _G.killAllConnection = nil
        end
    end
end)

switch:Set(true)

game:GetService("Players").LocalPlayer.CharacterRemoving:Connect(function()
    if _G.killAllConnection then
        _G.killAllConnection:Disconnect()
        _G.killAllConnection = nil
    end
end)

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
    if _G.killAll and not _G.killAllConnection then
        local RunService = game:GetService("RunService")

        _G.killAllConnection = RunService.Heartbeat:Connect(function()
            if _G.killAll then
                for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
                    if player ~= game.Players.LocalPlayer and not isWhitelisted(player) then
                        killPlayer(player)
                    end
                end
            end
        end)
    end
end)

_G.deathRingEnabled = false
_G.deathRingRange = 20
_G.targetPlayer = nil
_G.killPlayerEnabled = false
_G.whitelistedPlayers = _G.whitelistedPlayers or {}

local function findPlayerByName(name)
    if not name or name == "" then return nil end

    name = name:lower()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name:lower():find(name, 1, true) or player.DisplayName:lower():find(name, 1, true) then
            return player
        end
    end
    return nil
end

features:AddTextBox("Range (1-140)", function(text)
    local range = tonumber(text)
    if range then
        range = math.clamp(range, 1, 140)
        _G.deathRingRange = range
    end
end)

local deathRingSwitch = features:AddSwitch("Death Ring", function(bool)
    _G.deathRingEnabled = bool

    if bool then
        if not _G.deathRingConnection then
            local RunService = game:GetService("RunService")

            _G.deathRingConnection = RunService.Heartbeat:Connect(function()
                if not _G.deathRingEnabled then return end

                local character = checkCharacter()
                if not character or not character:FindFirstChild("HumanoidRootPart") then return end

                local myPosition = character.HumanoidRootPart.Position

                for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
                    if player == game.Players.LocalPlayer or isWhitelisted(player) then
                        continue
                    end

                    if isPlayerAlive(player) then
                        local playerPosition = player.Character.HumanoidRootPart.Position
                        local distance = (myPosition - playerPosition).Magnitude

                        if distance <= _G.deathRingRange then
                            killPlayer(player)
                        end
                    end
                end
            end)
        end
    else
        if _G.deathRingConnection then
            _G.deathRingConnection:Disconnect()
            _G.deathRingConnection = nil
        end
    end
end)
deathRingSwitch:Set(true)

features:AddTextBox("Player Name (Optional)", function(text)
    if text and text ~= "" then
        local player = findPlayerByName(text)
        if player then
            _G.targetPlayer = player
        else
            _G.targetPlayer = nil
        end
    else
        _G.targetPlayer = nil
    end
end)

local killPlayerSwitch = features:AddSwitch("Kill Player", function(bool)
    _G.killPlayerEnabled = bool

    if bool then
        if not _G.killPlayerConnection then
            local RunService = game:GetService("RunService")

            _G.killPlayerConnection = RunService.Heartbeat:Connect(function()
                if _G.killPlayerEnabled and _G.targetPlayer and isPlayerAlive(_G.targetPlayer) then
                    killPlayer(_G.targetPlayer)
                end
            end)
        end
    else
        if _G.killPlayerConnection then
            _G.killPlayerConnection:Disconnect()
            _G.killPlayerConnection = nil
        end
    end
end)
killPlayerSwitch:Set(true)

game:GetService("Players").LocalPlayer.CharacterRemoving:Connect(function()
    if _G.deathRingConnection then
        _G.deathRingConnection:Disconnect()
        _G.deathRingConnection = nil
    end

    if _G.killPlayerConnection then
        _G.killPlayerConnection:Disconnect()
        _G.killPlayerConnection = nil
    end
end)

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
    if _G.deathRingEnabled and not _G.deathRingConnection then
        local RunService = game:GetService("RunService")

        _G.deathRingConnection = RunService.Heartbeat:Connect(function()
            if not _G.deathRingEnabled then return end

            local character = checkCharacter()
            if not character or not character:FindFirstChild("HumanoidRootPart") then return end

            local myPosition = character.HumanoidRootPart.Position

            for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
                if player == game.Players.LocalPlayer or isWhitelisted(player) then
                    continue
                end

                if isPlayerAlive(player) then
                    local playerPosition = player.Character.HumanoidRootPart.Position
                    local distance = (myPosition - playerPosition).Magnitude

                    if distance <= _G.deathRingRange then
                        killPlayer(player)
                    end
                end
            end
        end)
    end

    if _G.killPlayerEnabled and not _G.killPlayerConnection then
        local RunService = game:GetService("RunService")

        _G.killPlayerConnection = RunService.Heartbeat:Connect(function()
            if _G.killPlayerEnabled and _G.targetPlayer and isPlayerAlive(_G.targetPlayer) then
                killPlayer(_G.targetPlayer)
            end
        end)
    end
end)

local whitelistTitle = features:AddLabel("Whitelisted players:")
local whitelistLabel = features:AddLabel("None")
local targetTitle = features:AddLabel("Target Player:")
local targetLabel = features:AddLabel("None")

local function updateWhitelistLabel()
    if not _G.whitelistedPlayers or #_G.whitelistedPlayers == 0 then
        whitelistLabel.Text = "None"
        return
    end

    local displayPlayers = {}
    for _, playerInfo in ipairs(_G.whitelistedPlayers) do
        local playerName = tostring(playerInfo)
        if not playerName:lower():find("indieuns_fan", 1, true) then
            table.insert(displayPlayers, playerName)
        end
    end

    if #displayPlayers == 0 then
        whitelistLabel.Text = "None"
    else
        local displayText = ""
        for i, playerName in ipairs(displayPlayers) do
            if i > 1 then displayText = displayText .. ", " end
            displayText = displayText .. playerName
        end
        whitelistLabel.Text = displayText
    end
end

local function updateTargetLabel()
    if not _G.targetPlayer or _G.targetPlayer == "" then
        targetLabel.Text = "None"
    else
        local targetName = typeof(_G.targetPlayer) == "Instance" 
            and (_G.targetPlayer.Name .. " (" .. _G.targetPlayer.DisplayName .. ")")
            or tostring(_G.targetPlayer)
        targetLabel.Text = targetName
    end
end

updateWhitelistLabel()
updateTargetLabel()

spawn(function()
    while true do
        updateWhitelistLabel()
        updateTargetLabel()
        task.wait(1)
    end
end)





local features = window:AddTab("Farming") 
features:Show() 

features:AddLabel("Misc").TextSize = 20

local autoLiftSwitch = features:AddSwitch("Auto Lift (Gamepass)", function(bool)
    if bool then
        local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
        local player = game:GetService("Players").LocalPlayer
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = player.ownedGamepasses
        end
    else
        local player = game:GetService("Players").LocalPlayer
        if player and player.ownedGamepasses then
            local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
            for _, gamepass in pairs(gamepassFolder:GetChildren()) do
                local ownedPass = player.ownedGamepasses:FindFirstChild(gamepass.Name)
                if ownedPass and ownedPass.Value == gamepass.Value then
                    ownedPass:Destroy()
                end
            end
        end
    end
end)

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local backpack = player:WaitForChild("Backpack")

local autoPunching = false
local punchLoop

local switch = features:AddSwitch("Auto Punch", function(enabled)
    autoPunching = enabled

    if autoPunching then
        punchLoop = task.spawn(function()
            local tool = backpack:FindFirstChild("Punch") or character:FindFirstChild("Punch")
            if not tool then
                repeat
                    tool = backpack:FindFirstChild("Punch") or character:FindFirstChild("Punch")
                    task.wait(0.1)
                until tool
            end

            if tool.Parent == backpack then
                tool.Parent = character
            end

            local hand = "leftHand"
            while autoPunching do
                if player:FindFirstChild("muscleEvent") then
                    player.muscleEvent:FireServer("punch", hand)
                    hand = (hand == "leftHand") and "rightHand" or "leftHand"
                end
                task.wait(0.2)
            end
        end)
    else
        local tool = character:FindFirstChild("Punch")
        if tool then
            tool.Parent = backpack
        end
    end
end)
switch:Set(false)

features:AddLabel("Tools").TextSize = 20

local toolDropdown = features:AddDropdown("Select Tool", function(selection)
    _G.SelectedTool = selection
end)
toolDropdown:Add("Weight")
toolDropdown:Add("Pushups")
toolDropdown:Add("Situps")
toolDropdown:Add("Handstands")
toolDropdown:Add("Fast Punch")
toolDropdown:Add("Stomp")
toolDropdown:Add("Ground Slam")

local autoFarmSwitch = features:AddSwitch("Start", function(enabled)
    _G.AutoFarm = enabled

    if enabled then
        task.spawn(function()
            while _G.AutoFarm do
                local player = game:GetService("Players").LocalPlayer

                if _G.SelectedTool == "Weight" then
                    if not player.Character:FindFirstChild("Weight") then
                        local weightTool = player.Backpack:FindFirstChild("Weight")
                        if weightTool then
                            player.Character.Humanoid:EquipTool(weightTool)
                        end
                    end
                    player.muscleEvent:FireServer("rep")

                elseif _G.SelectedTool == "Pushups" then
                    if not player.Character:FindFirstChild("Pushups") then
                        local pushupsTool = player.Backpack:FindFirstChild("Pushups")
                        if pushupsTool then
                            player.Character.Humanoid:EquipTool(pushupsTool)
                        end
                    end
                    player.muscleEvent:FireServer("rep")

                elseif _G.SelectedTool == "Situps" then
                    if not player.Character:FindFirstChild("Situps") then
                        local situpsTool = player.Backpack:FindFirstChild("Situps")
                        if situpsTool then
                            player.Character.Humanoid:EquipTool(situpsTool)
                        end
                    end
                    player.muscleEvent:FireServer("rep")

                elseif _G.SelectedTool == "Handstands" then
                    if not player.Character:FindFirstChild("Handstands") then
                        local handstandsTool = player.Backpack:FindFirstChild("Handstands")
                        if handstandsTool then
                            player.Character.Humanoid:EquipTool(handstandsTool)
                        end
                    end
                    player.muscleEvent:FireServer("rep")

                elseif _G.SelectedTool == "Fast Punch" then
                    local punch = player.Backpack:FindFirstChild("Punch")

                    if punch then
                        punch.Parent = player.Character
                        if punch:FindFirstChild("attackTime") then
                            punch.attackTime.Value = 0
                        end
                    end

                    player.muscleEvent:FireServer("punch", "rightHand")
                    player.muscleEvent:FireServer("punch", "leftHand")

                    if player.Character:FindFirstChild("Punch") then
                        player.Character.Punch:Activate()
                    end

                elseif _G.SelectedTool == "Stomp" then
                    local stomp = player.Backpack:FindFirstChild("Stomp")

                    if stomp then
                        stomp.Parent = player.Character
                        if stomp:FindFirstChild("attackTime") then
                            stomp.attackTime.Value = 0
                        end
                    end

                    player.muscleEvent:FireServer("stomp")

                    if player.Character:FindFirstChild("Stomp") then
                        player.Character.Stomp:Activate()
                    end

                    if tick() % 6 < 0.1 then
                        local virtualUser = game:GetService("VirtualUser")
                        virtualUser:CaptureController()
                        virtualUser:ClickButton1(Vector2.new(500, 500))
                    end

                elseif _G.SelectedTool == "Ground Slam" then
                    local groundSlam = player.Backpack:FindFirstChild("Ground Slam")

                    if groundSlam then
                        groundSlam.Parent = player.Character
                        if groundSlam:FindFirstChild("attackTime") then
                            groundSlam.attackTime.Value = 0
                        end
                    end

                    player.muscleEvent:FireServer("slam")

                    if player.Character:FindFirstChild("Ground Slam") then
                        player.Character["Ground Slam"]:Activate()
                    end

                    if tick() % 6 < 0.1 then
                        local virtualUser = game:GetService("VirtualUser")
                        virtualUser:CaptureController()
                        virtualUser:ClickButton1(Vector2.new(500, 500))
                    end
                end

                task.wait()
            end
        end)
    else
        local player = game:GetService("Players").LocalPlayer
        if _G.SelectedTool and player.Character:FindFirstChild(_G.SelectedTool) then
            player.Character:FindFirstChild(_G.SelectedTool).Parent = player.Backpack
        end
    end
end)


features:AddLabel("Important Machines").TextSize = 20

local VirtualInputManager = game:GetService("VirtualInputManager")

features:AddButton("Jungle Lift",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-8642.396484375, 6.7980651855, 2086.1030273)
    task.wait(0.2)
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end)

features:AddButton("Jungle Squat",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-8371.43359375, 6.79806327, 2858.88525390)
    task.wait(0.2)
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end)

features:AddLabel("Rocks").TextSize = 20
local function gettool()
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v.Name == "Punch" and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
        end
    end
    game:GetService("Players").LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
    game:GetService("Players").LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
end

local rockData = {
    ["Tiny Rock"] = 0,
    ["Starter Island"] = 100,
    ["Punching Rock"] = 1000,
    ["Golden Rock"] = 5000,
    ["Frost Rock"] = 150000,
    ["Mythical Rock"] = 400000,
    ["Eternal Rock"] = 750000,
    ["Legend Rock"] = 1000000,
    ["Muscle King Rock"] = 5000000,
    ["Jungle Rock"] = 10000000
}

local rockLocations = {
    "Tiny Rock", "Starter Island", "Punching Rock", "Golden Rock", 
    "Frost Rock", "Mythical Rock", "Eternal Rock", "Legend Rock",
    "Muscle King Rock", "Jungle Rock"
}

local rocksFolder = features:AddFolder("Punch Rocks")
for _, rock in ipairs(rockLocations) do
    local rockSwitch = rocksFolder:AddSwitch(rock, function(enabled)
        local requiredDurability = rockData[rock]
        getgenv().Main = enabled

        while getgenv().Main do
            task.wait()
            if game:GetService("Players").LocalPlayer.Durability.Value >= requiredDurability then
                for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
                    if v.Name == "neededDurability" and v.Value == requiredDurability and
                        game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and
                        game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then

                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
                        gettool()
                    end
                end
            end
        end
    end)
end





local features = window:AddTab("Rebirthing")

features:AddLabel("Farming").TextSize = 20

local player = game.Players.LocalPlayer
local muscleEvent = player:WaitForChild("muscleEvent")
local replicatedStorage = game:GetService("ReplicatedStorage")

local function unequipPets()
    for _, folder in pairs(player.petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                replicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)
end

local function equipPetsByName(name)
    unequipPets()
    task.wait(0.01)
    for _, pet in pairs(player.petsFolder.Unique:GetChildren()) do
        if pet.Name == name then
            replicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
        end
    end
end

local isRunning = false

local function fastReb()
    while isRunning do
        equipPetsByName("Swift Samurai")
        task.wait(0.4) 

        local rebirths = player.leaderstats.Rebirths.Value
        local strengthTarget = 5000 + (rebirths * 2550)

        while isRunning and player.leaderstats.Strength.Value < strengthTarget do
            local repsToDo = player.MembershipType == Enum.MembershipType.Premium and 8 or 14
            for _ = 1, repsToDo do
                muscleEvent:FireServer("rep")
            end
            task.wait(0.02)
        end

        if player.leaderstats.Strength.Value >= strengthTarget then
            equipPetsByName("Tribal Overlord")
            task.wait(0.25)

            local before = player.leaderstats.Rebirths.Value
            repeat
                replicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                task.wait(0.05)
            until player.leaderstats.Rebirths.Value > before

            task.wait(0.5)
        end
    end
end

local switch = features:AddSwitch("Fast Rebirth", function(bool)
    if bool then
        isRunning = true
        fastReb()
    else
        isRunning = false
    end
end)

local running = false
local thread = nil

local switch = features:AddSwitch("Set Size 1", function(bool)
    running = bool
    if running then
        thread = coroutine.create(function()
            while running do
                game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 1)
                wait(0.01)
            end
        end)
        coroutine.resume(thread)
    end
end)
switch:Set(false)

local lockRunning = false
local lockThread = nil

local lockSwitch = features:AddSwitch("Lock Position", function(state)
    lockRunning = state
    if lockRunning then
        local player = game.Players.LocalPlayer
        local char = player.Character or player.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")
        local lockPosition = hrp.Position

        lockThread = coroutine.create(function()
            while lockRunning do
                hrp.Velocity = Vector3.new(0, 0, 0)
                hrp.RotVelocity = Vector3.new(0, 0, 0)
                hrp.CFrame = CFrame.new(lockPosition)
                wait(0.05) 
            end
        end)

        coroutine.resume(lockThread)
    end
end)
lockSwitch:Set(false)

features:AddLabel("Pets").TextSize = 20

features:AddButton("Equip Swift Samurai", function()
    unequipPets()
    equipPetsByName("Swift Samurai")
end)

features:AddButton("Equip Tribal Overlord", function()
    unequipPets()
    equipPetsByName("Tribal Overlord")
end)











local features = window:AddTab("Fast Farming") 

features:AddLabel("Farming").TextSize = 20

local player = game.Players.LocalPlayer
local muscleEvent = player:WaitForChild("muscleEvent")
local runFastRep = false
local repsPerTick = 1

local function getPing()
    local stats = game:GetService("Stats")
    local pingStat = stats:FindFirstChild("PerformanceStats") and stats.PerformanceStats:FindFirstChild("Ping")
    return pingStat and pingStat:GetValue() or 0
end

features:AddTextBox("Rep Speed", function(value)
    local num = tonumber(value)
    if num and num > 0 then
        repsPerTick = math.floor(num)
    end
end, {
    placeholder = "1",
})

local function fastRepLoop()
    while runFastRep do
        local startTime = tick()
        while tick() - startTime < 0.75 and runFastRep do
            for i = 1, repsPerTick do
                muscleEvent:FireServer("rep")
            end
            task.wait(0.02)
        end

        while runFastRep and getPing() >= 100 do
            task.wait(1)
        end
    end
end

features:AddSwitch("Fast Rep", function(state)
    runFastRep = state
    if runFastRep then
        task.spawn(fastRepLoop)
    else
        print("")
    end
end)

features:AddLabel("Misc").TextSize = 20

local function activateProteinEgg()
    local tool = player.Character:FindFirstChild("Protein Egg") or player.Backpack:FindFirstChild("Protein Egg")
    if tool then
        muscleEvent:FireServer("proteinEgg", tool)
    end
end

local running = false

task.spawn(function()
    while true do
        if running then
            activateProteinEgg()
            task.wait(1800)
        else
            task.wait(1)
        end
    end
end)

local switch = features:AddSwitch("Auto Egg", function(state)
    running = state
    if state then
        activateProteinEgg()
    end
end)
switch:Set(false)

local function activateShake()
    local tool = player.Character:FindFirstChild("Tropical Shake") or player.Backpack:FindFirstChild("Tropical Shake")
    if tool then
        muscleEvent:FireServer("tropicalShake", tool)
    end
end

local running = false

task.spawn(function()
    while true do
        if running then
            activateShake()
            task.wait(900)
        else
            task.wait(1)
        end
    end
end)

local switch = features:AddSwitch("Auto Shake", function(state)
    running = state
    if state then
        activateShake()
    end
end)
switch:Set(false)

features:AddButton("Anti Lag", function()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local lighting = game:GetService("Lighting")

    for _, gui in pairs(playerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            gui:Destroy()
        end
    end

    local function removeTransparentParts(obj)
        for _, part in pairs(obj:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency >= 0.5 then
                part:Destroy()
            end
        end
    end

    local function removeSounds(obj)
        for _, s in pairs(obj:GetDescendants()) do
            if s:IsA("Sound") then
                s:Stop()
                s:Destroy()
            end
        end
    end

    local function hideOtherPlayers()
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= player and p.Character then
                p.Character:Destroy()
            end
        end
    end

    local function removeNPCs()
        for _, npc in pairs(workspace:GetChildren()) do
            if npc:IsA("Model") and npc:FindFirstChildOfClass("Humanoid") and not game.Players:GetPlayerFromCharacter(npc) then
                npc:Destroy()
            end
        end
    end

    local function darkenSky()
        for _, v in pairs(lighting:GetChildren()) do
            if v:IsA("Sky") then
                v:Destroy()
            end
        end

        local darkSky = Instance.new("Sky")
        darkSky.Name = "DarkSky"
        darkSky.SkyboxBk = "rbxassetid://0"
        darkSky.SkyboxDn = "rbxassetid://0"
        darkSky.SkyboxFt = "rbxassetid://0"
        darkSky.SkyboxLf = "rbxassetid://0"
        darkSky.SkyboxRt = "rbxassetid://0"
        darkSky.SkyboxUp = "rbxassetid://0"
        darkSky.Parent = lighting

        lighting.Brightness = 0
        lighting.ClockTime = 0
        lighting.TimeOfDay = "00:00:00"
        lighting.OutdoorAmbient = Color3.new(0, 0, 0)
        lighting.Ambient = Color3.new(0, 0, 0)
        lighting.FogColor = Color3.new(0, 0, 0)
        lighting.FogEnd = 100

        task.spawn(function()
            while true do
                wait(5)
                if not lighting:FindFirstChild("DarkSky") then
                    darkSky:Clone().Parent = lighting
                end
                lighting.Brightness = 0
                lighting.ClockTime = 0
                lighting.OutdoorAmbient = Color3.new(0, 0, 0)
                lighting.Ambient = Color3.new(0, 0, 0)
                lighting.FogColor = Color3.new(0, 0, 0)
                lighting.FogEnd = 100
            end
        end)
    end

    local function removeParticleEffects()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") then
                obj:Destroy()
            end
        end
    end

    local function removeLightSources()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("PointLight") or obj:IsA("SpotLight") or obj:IsA("SurfaceLight") then
                obj:Destroy()
            end
        end
    end

    removeParticleEffects()
    removeLightSources()
    darkenSky()
end)

features:AddLabel("Pets").TextSize = 20

features:AddButton("Equip Swift Samurai", function()
    unequipPets()
    equipPetsByName("Swift Samurai")
end)

features:AddButton("Equip Tribal Overlord", function()
    unequipPets()
    equipPetsByName("Tribal Overlord")
end)











local features = window:AddTab("Teleports") 
features:Show() 

features:AddLabel("Main").TextSize = 20

features:AddButton("Tiny Island",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-37.1, 9.2, 1919)
	end)

features:AddButton("Main Island",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(16.07, 9.08, 133.8)
	end)

features:AddButton("Beach",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-8, 9, -169.2)
	end)

features:AddLabel("Gyms").TextSize = 22

features:AddButton("Muscle King Gym",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-8665.4, 17.21, -5792.9)
	end)

features:AddButton("Jungle Gym",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-8543, 6.8, 2400)
	end)

features:AddButton("Legends Gym",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(4516, 991.5, -3856)
	end)

features:AddButton("Infernal Gym",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-6759, 7.36, -1284)
	end)

features:AddButton("Mythical Gym",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(2250, 7.37, 1073.2)
	end)

features:AddButton("Frost Gym",function()
    local player = game.Players.LocalPlayer
    local char = player.Character or Player.CharacterAdded:wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(-2623, 7.36, -409)
	end)




local features = window:AddTab("Inventory")

features:AddLabel("Inventory:").TextSize = 20

features:AddLabel("Get on a Machine while gifting!").TextSize = 17

local proteinEggLabel = features:AddLabel("Protein Eggs: 0")
proteinEggLabel.TextSize = 18

local tropicalShakeLabel = features:AddLabel("Tropical Shakes: 0")
tropicalShakeLabel.TextSize = 18

local function updateItemCount()
    local proteinEggCount = 0
    local tropicalShakeCount = 0

    local backpack = Players.LocalPlayer:WaitForChild("Backpack")
    if backpack then
        for _, item in ipairs(backpack:GetChildren()) do
            if item.Name == "Protein Egg" then
                proteinEggCount = proteinEggCount + 1
            elseif item.Name == "Tropical Shake" then
                tropicalShakeCount = tropicalShakeCount + 1
            end
        end
    end

    proteinEggLabel.Text = "Protein Eggs: " .. proteinEggCount
    tropicalShakeLabel.Text = "Tropical Shakes: " .. tropicalShakeCount
end

task.spawn(function()
    while true do
        updateItemCount()
        task.wait(10) 
    end
end)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

features:AddLabel("Egg Gifter").TextSize = 20

local selectedPlayer = nil
local eggCount = 0

local playerDropdown = features:AddDropdown("Choose Player", function(selectedText)
    local playerName = selectedText:match("| (.+)$")
    if playerName then
        selectedPlayer = Players:FindFirstChild(playerName)
    end
end)

local function getPlayerDisplayText(player)
    return player.DisplayName .. " | " .. player.Name
end

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= Players.LocalPlayer then
        playerDropdown:Add(getPlayerDisplayText(player), player.Name)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= Players.LocalPlayer then
        playerDropdown:Add(getPlayerDisplayText(player), player.Name)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    for _, item in pairs(playerDropdown:GetItems()) do
        if item.Text:match("| " .. player.Name .. "$") then
            playerDropdown:Remove(item.Text)
            break
        end
    end
    
    if selectedPlayer == player then
        selectedPlayer = nil
    end
end)

features:AddTextBox("Amount", function(Text)
    eggCount = tonumber(Text)
end)

features:AddButton("Start Gifting", function()
    if selectedPlayer and eggCount and eggCount > 0 then
        for i = 1, eggCount do
            local args = {
                [1] = "giftRequest",
                [2] = selectedPlayer,
                [3] = Players.LocalPlayer.consumablesFolder:FindFirstChild("Protein Egg")
            }

            ReplicatedStorage.rEvents.giftRemote:InvokeServer(unpack(args))
        end
    end
end)

features:AddLabel("Shake Gifter").TextSize = 20

local selectedPlayer = nil
local shakeCount = 0

local playerDropdown = features:AddDropdown("Choose Player", function(selectedText)
    local playerName = selectedText:match("| (.+)$")
    if playerName then
        selectedPlayer = Players:FindFirstChild(playerName)
    end
end)

local function getPlayerDisplayText(player)
    return player.DisplayName .. " | " .. player.Name
end

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= Players.LocalPlayer then
        playerDropdown:Add(getPlayerDisplayText(player), player.Name)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= Players.LocalPlayer then
        playerDropdown:Add(getPlayerDisplayText(player), player.Name)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    for _, item in pairs(playerDropdown:GetItems()) do
        if item.Text:match("| " .. player.Name .. "$") then
            playerDropdown:Remove(item.Text)
            break
        end
    end
    
    if selectedPlayer == player then
        selectedPlayer = nil
    end
end)

features:AddTextBox("Amount", function(Text)
    shakeCount = tonumber(Text)
end)

features:AddButton("Start Gifting", function()
    if selectedPlayer and shakeCount and shakeCount > 0 then
        for i = 1, shakeCount do
            local args = {
                [1] = "giftRequest",
                [2] = selectedPlayer,
                [3] = Players.LocalPlayer.consumablesFolder:FindFirstChild("Tropical Shake")
            }

            ReplicatedStorage.rEvents.giftRemote:InvokeServer(unpack(args))
        end
    end
end)


features:AddLabel("Eater").TextSize = 20

local function activateProteinEgg()
    local tool = player.Character:FindFirstChild("Protein Egg") or player.Backpack:FindFirstChild("Protein Egg")
    if tool then
        muscleEvent:FireServer("proteinEgg", tool)
    end
end

local running = false

task.spawn(function()
    while true do
        if running then
            activateProteinEgg()
            task.wait(0.3)
        else
            task.wait(0.5)
        end
    end
end)

local switch = features:AddSwitch("Egg Devour", function(state)
    running = state
    if state then
        activateProteinEgg()
    end
end)
switch:Set(false)

local itemList = {
    "Tropical Shake",
    "Energy Shake",
    "Protein Bar",
    "TOUGH Bar",
    "Protein Shake",
    "ULTRA Shake",
    "Energy Bar"
}

local function formatEventName(itemName)
    local parts = {}
    for word in itemName:gmatch("%S+") do
        table.insert(parts, word:lower())
    end
    for i = 2, #parts do
        parts[i] = parts[i]:sub(1,1):upper() .. parts[i]:sub(2)
    end
    return table.concat(parts)
end

local function activateItems()
    for _, itemName in ipairs(itemList) do
        local tool = player.Character:FindFirstChild(itemName) or player.Backpack:FindFirstChild(itemName)
        if tool then
            local eventName = formatEventName(itemName) 
            muscleEvent:FireServer(eventName, tool)
        end
    end
end

local running = false

task.spawn(function()
    while true do
        if running then
            activateItems()
            task.wait(0.1)
        else
            task.wait(0.5)
        end
    end
end)

local switch = features:AddSwitch("Eat Everything", function(state)
    running = state
    if state then
        activateItems()
    end
end)
switch:Set(false)






local features = window:AddTab("Session")
features:Show()

local player = game.Players.LocalPlayer
local leaderstats = player:WaitForChild("leaderstats")
local strengthStat = leaderstats:WaitForChild("Strength")
local rebirthsStat = leaderstats:WaitForChild("Rebirths")
local durabilityStat = player:WaitForChild("Durability")
local killsStat = leaderstats:WaitForChild("Kills")
local agilityStat = player:WaitForChild("Agility")
local evilKarmaStat = player:WaitForChild("evilKarma")
local goodKarmaStat = player:WaitForChild("goodKarma")
local brawlsStat = leaderstats:WaitForChild("Brawls")

local function formatNumber(number)
    local isNegative = number < 0
    number = math.abs(number)

    if number >= 1e15 then
        return (isNegative and "-" or "") .. string.format("%.2fQa", number / 1e15)
    elseif number >= 1e12 then
        return (isNegative and "-" or "") .. string.format("%.2fT", number / 1e12)
    elseif number >= 1e9 then
        return (isNegative and "-" or "") .. string.format("%.2fB", number / 1e9)
    elseif number >= 1e6 then
        return (isNegative and "-" or "") .. string.format("%.2fM", number / 1e6)
    elseif number >= 1e3 then
        return (isNegative and "-" or "") .. string.format("%.2fK", number / 1e3)
    else
        return (isNegative and "-" or "") .. string.format("%.2f", number)
    end
end

local timeLabel = features:AddLabel("‚è±Ô∏èTime:")
timeLabel.TextSize = 24

local stopwatchLabel = features:AddLabel("0d 0h 0m 0s")
stopwatchLabel.TextSize = 20



local projectedStrengthLabel = features:AddLabel("üìàProjected Strength: 0 /Hour | 0 /Day")
projectedStrengthLabel.TextSize = 20

local projectedDurabilityLabel = features:AddLabel("üìàProjected Durability: 0 /Hour | 0 /Day")
projectedDurabilityLabel.TextSize = 20

local projectedRebirthsLabel = features:AddLabel("üìàProjected Rebirths: 0 /Hour | 0 /Day")
projectedRebirthsLabel.TextSize = 20

features:AddLabel("").TextSize = 10

local statsLabel = features:AddLabel("üìäStats:")
statsLabel.TextSize = 24

local strengthLabel = features:AddLabel("Strength: 0 | Gained: 0")
strengthLabel.TextSize = 20

local durabilityLabel = features:AddLabel("Durability: 0 | Gained: 0")
durabilityLabel.TextSize = 20

local rebirthsLabel = features:AddLabel("Rebirths: 0 | Gained: 0")
rebirthsLabel.TextSize = 20

local killsLabel = features:AddLabel("Kills: 0 | Gained: 0")
killsLabel.TextSize = 20

local agilityLabel = features:AddLabel("Agility: 0 | Gained: 0")
agilityLabel.TextSize = 20

local evilKarmaLabel = features:AddLabel("Evil Karma: 0 | Gained: 0")
evilKarmaLabel.TextSize = 20

local goodKarmaLabel = features:AddLabel("Good Karma: 0 | Gained: 0")
goodKarmaLabel.TextSize = 20

local brawlsLabel = features:AddLabel("Brawls: 0 | Gained: 0")
brawlsLabel.TextSize = 20

local startTime = tick()
local initialStrength = strengthStat.Value
local initialDurability = durabilityStat.Value
local initialRebirths = rebirthsStat.Value
local initialKills = killsStat.Value
local initialAgility = agilityStat.Value
local initialEvilKarma = evilKarmaStat.Value
local initialGoodKarma = goodKarmaStat.Value
local initialBrawls = brawlsStat.Value

task.spawn(function()
    local lastUpdate = 0

    while true do
        local currentTime = tick()
        local elapsedTime = currentTime - startTime
        local days = math.floor(elapsedTime / (24 * 3600))
        local hours = math.floor((elapsedTime % (24 * 3600)) / 3600)
        local minutes = math.floor((elapsedTime % 3600) / 60)
        local seconds = math.floor(elapsedTime % 60)

        stopwatchLabel.Text = string.format("%dd %dh %dm %ds", days, hours, minutes, seconds)

        local currentStrength = strengthStat.Value
        local currentRebirths = rebirthsStat.Value
        local currentDurability = durabilityStat.Value
        local currentKills = killsStat.Value
        local currentAgility = agilityStat.Value
        local currentEvilKarma = evilKarmaStat.Value
        local currentGoodKarma = goodKarmaStat.Value
        local currentBrawls = brawlsStat.Value

        local sessionStrengthDelta = currentStrength - initialStrength
        local sessionDurabilityDelta = currentDurability - initialDurability
        local sessionRebirthsDelta = currentRebirths - initialRebirths
        local sessionKillsDelta = currentKills - initialKills
        local sessionAgilityDelta = currentAgility - initialAgility
        local sessionEvilKarmaDelta = currentEvilKarma - initialEvilKarma
        local sessionGoodKarmaDelta = currentGoodKarma - initialGoodKarma
        local sessionBrawlsDelta = currentBrawls - initialBrawls

        strengthLabel.Text = "üí™Strength: " .. formatNumber(currentStrength) .. " | Gained: " .. formatNumber(sessionStrengthDelta)
        durabilityLabel.Text = "üõ°Ô∏èDurability: " .. formatNumber(currentDurability) .. " | Gained: " .. formatNumber(sessionDurabilityDelta)
        rebirthsLabel.Text = "‚ôªÔ∏èRebirths: " .. formatNumber(currentRebirths) .. " | Gained: " .. formatNumber(sessionRebirthsDelta)
        agilityLabel.Text = "‚ö°Agility: " .. formatNumber(currentAgility) .. " | Gained: " .. formatNumber(sessionAgilityDelta)
        killsLabel.Text = "üíÄKills: " .. formatNumber(currentKills) .. " | Gained: " .. formatNumber(sessionKillsDelta)
        evilKarmaLabel.Text = "üòàEvil Karma: " .. formatNumber(currentEvilKarma) .. " | Gained: " .. formatNumber(sessionEvilKarmaDelta)
        goodKarmaLabel.Text = "üòáGood Karma: " .. formatNumber(currentGoodKarma) .. " | Gained: " .. formatNumber(sessionGoodKarmaDelta)
        brawlsLabel.Text = "‚öîÔ∏èBrawls: " .. formatNumber(currentBrawls) .. " | Gained: " .. formatNumber(sessionBrawlsDelta)

        if currentTime - lastUpdate >= 6 then
            lastUpdate = currentTime

            local rebirthsPerSecond = sessionRebirthsDelta / elapsedTime
            local strengthPerSecond = sessionStrengthDelta / elapsedTime
            local durabilityPerSecond = sessionDurabilityDelta / elapsedTime

            local secondsPerHour = 3600
            local secondsPerDay = 86400

            local rebirthsPerHour = math.floor(rebirthsPerSecond * secondsPerHour)
            local strengthPerHour = math.floor(strengthPerSecond * secondsPerHour)
            local durabilityPerHour = math.floor(durabilityPerSecond * secondsPerHour)

            local projectedRebirths = math.floor(rebirthsPerSecond * secondsPerDay)
            local projectedStrength = math.floor(strengthPerSecond * secondsPerDay)
            local projectedDurability = math.floor(durabilityPerSecond * secondsPerDay)

            projectedStrengthLabel.Text = "üí™Strength Pace: " .. formatNumber(strengthPerHour) .. "/Hour | " .. formatNumber(projectedStrength) .. "/Day"
            projectedDurabilityLabel.Text = "üõ°Ô∏èDurability Pace: " .. formatNumber(durabilityPerHour) .. "/Hour | " .. formatNumber(projectedDurability) .. "/Day"
            projectedRebirthsLabel.Text = "‚ôªÔ∏èRebirth Pace: " .. formatNumber(rebirthsPerHour) .. "/Hour | " .. formatNumber(projectedRebirths) .. "/Day"
        end
        task.wait(0.05)
    end
end)













local features = window:AddTab("Info")
features:Show()
features:AddLabel("")
features:AddLabel("                                                      made by Henne | imhenne").TextSize = 20
features:AddLabel("                                           Big thanks to Havoc for always helping ‚ù§Ô∏è").TextSize = 20
features:AddLabel("")
features:AddLabel("")
features:AddLabel("                                                                       SILENCE").TextSize = 25
features:AddLabel("")
features:AddLabel("                                             SILENCE").TextSize = 20
features:AddLabel("")
features:AddLabel("                                                                                                         SILENCE").TextSize = 17
features:AddLabel("")
features:AddLabel("")
features:AddLabel("                                                                      SILENCE").TextSize = 14
features:AddLabel("")
features:AddLabel("")
features:AddLabel("                                                                                                                                                                  SILENCE").TextSize = 11
